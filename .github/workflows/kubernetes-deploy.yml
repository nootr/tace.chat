name: Build and Deploy

on:
  release:
    types: [published]
  workflow_dispatch:

jobs:
  build-and-push:
    runs-on: ubuntu-latest
    steps:
    - name: Checkout repository
      uses: actions/checkout@v4

    - name: Log in to Docker Hub
      uses: docker/login-action@v3
      with:
        username: ${{ secrets.DOCKER_USERNAME }}
        password: ${{ secrets.DOCKER_TOKEN }}

    - name: Build and push collector image
      uses: docker/build-push-action@v5
      with:
        context: .
        file: ./Dockerfile.collector
        push: true
        tags: |
          ${{ secrets.DOCKER_USERNAME }}/tace-collector:${{ github.ref_name }}
          ${{ secrets.DOCKER_USERNAME }}/tace-collector:latest

    - name: Build and push node image
      uses: docker/build-push-action@v5
      with:
        context: .
        file: ./Dockerfile.node
        push: true
        tags: |
          ${{ secrets.DOCKER_USERNAME }}/tace-node:${{ github.ref_name }}
          ${{ secrets.DOCKER_USERNAME }}/tace-node:latest

  deploy:
    runs-on: ubuntu-latest
    needs: build-and-push
    steps:
    - name: Checkout repository
      uses: actions/checkout@v4

    - name: Set up Kubeconfig
      run: |
        mkdir -p ~/.kube
        echo "${{ secrets.KUBE_CONFIG }}" > ~/.kube/config
        chmod 600 ~/.kube/config

    - name: Install kubectl
      uses: azure/setup-kubectl@v3

    - name: Install envsubst
      run: sudo apt-get update && sudo apt-get install -y gettext-base

    - name: Deploy Namespace, PVC
      run: |
        kubectl apply -f k8s/namespace.yaml
        kubectl apply -f k8s/pvc.yaml

    - name: Deploy Collector to Kubernetes
      run: |
        export DOCKER_USERNAME="${{ secrets.DOCKER_USERNAME }}"
        export GITHUB_REF_NAME="${{ github.ref_name }}"
        envsubst < k8s/collector.yaml | kubectl apply -f -

    - name: Deploy Node to Kubernetes
      run: |
        export DOCKER_USERNAME="${{ secrets.DOCKER_USERNAME }}"
        export GITHUB_REF_NAME="${{ github.ref_name }}"
        envsubst < k8s/node.yaml | kubectl apply -f -

    - name: Deploy Ingress to Kubernetes
      run: kubectl apply -f k8s/ingress.yaml
